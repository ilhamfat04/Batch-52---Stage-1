ORM = Object Relation Mapping. Mempermudah melakukan query ke database, Mempermudah melakukan konfigurasi, lebih aman, query yg dijalankan akan dibungkus dengan sebuah method

DDL, => Database Definition Language. Create Database ? Drop Database ? Create Table ? Alter Table
DML, => Database Manipulation Language. SELECT, INSERT, UPDATE, DELETE dst.

SELECT => Keyword (column selected ?) FROM (table name).
SELECT => Keyword (column selected ?) FROM (table name) WHERE (condition) = (value).

INSERT => Keyword (table destination) (Column Insert ?) VALUES (values inserted).

INSERT INTO public.tb_users(
	id, name, email, password)
	VALUES (?, ?, ?, ?);

UPDATE => Keyword (table destination) SET (Column selected with value) where condition = value

UPDATE public.tb_users
	SET id=?, name=?, email=?, password=?, "isHandsome"=?
	WHERE <condition>;

DELETE => Keyword (table destination) where condition
DELETE FROM public.tb_users
	WHERE <condition>;








######################### AUTH 	#########################
- AUTHENTICATION = Proses mengenali who's you ?  
- ENCRYPTION = Proses encrypsi untuk mengamankan dalam sebuah kode ?
- SESSION = Batas waktu saat mengakses interface / batas waktu saat berkomunikasi ?

REGISTRASI
- MENAMBAHKAN USER ? TABEL USER ? MEMBUAT FORM REGISTER BISA DIAKSES ? BAGAIMANA MENANGKAP DATA DARI FORM ? HASHING PASSWORD ? INSERT DATABASE ?

EXAMPLE : PASS => Input : megachan, Salt : yiownbdifbdn <=> 12bccmsu5ldfalnoia350hdfak



LOGIN
- MEMBUAT FORM LOGIN BISA DIAKSES ? BAGAIMANA MENANGKAP DATA DARI FORM ? MENCARI DATA DARI DATABASE ? BUAT SESI SETELAH LOGIN








######################### RELATION	#########################
- Relation => Mengkombinasikan antara table berdasarkan primary dan foreign key.
- foreign key => Kunci asing.
- jenis relasi tabel => 1:1 (hanya memiliki 1 relasi), 1:n (1 table bisa memiliki lebih dari 1 relasi), n:n (banyak tabel memiliki banyak relasi)


tabel USER
- id, name, username/email, password, level

tabel Profile
- id, gender, address, age, id_user(fk)


- primary key, foreign key

- EXAMPLE QUERIES
INSERT INTO public.audience(name, gender, id_address)
VALUES ('Samsul','male', 1);
INSERT INTO public.audience(name, gender, id_address)
VALUES ('Megawati','female', 2);
INSERT INTO public.audience(name, gender)
VALUES ('Putri Maharani','female');
INSERT INTO public.audience(name, gender, id_address)
VALUES ('Reza Ganteng','male', 2);

SELECT u.id, u.name, u.gender, 
a.name AS address, a.kode_pos 
FROM audience u INNER JOIN address a
ON u.id_address = a.id;